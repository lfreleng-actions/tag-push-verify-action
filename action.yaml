---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# tag-push-verify-action
name: "🏷️ Verify Pushed Tag"
description: "Verifies action/workflow trigger was tag push of given type"

inputs:
  versioning:
    description: 'Tag/string versioning type to check/validate'
    type: 'string'
    required: false
    # Options: [semver|calver|none]
    default: 'semver'
  exit_on_fail:
    description: 'When set true will exit on failed validation'
    required: false
    type: 'boolean'
    default: true

outputs:
  tag_push:
    description: 'Set true when action/workflow trigger was tag push'
    value: "${{ steps.event.outputs.tag_push }}"
  valid:
    description: 'Set true when pushed tag conforms to versioning type'
    value: "${{ steps.results.outputs.valid }}"
  tag:
    description: 'Set to the pushed tag value: github.ref_name'
    value: "${{ steps.refs.outputs.tag }}"
  dev_version:
    description: 'Set true if tag is a development version'
    value: "${{ steps.results.outputs.dev_version }}"

runs:
  using: 'composite'
  steps:
    - name: 'Report action/workflow environment/triggers'
      id: refs
      shell: bash
      run: |
        # Report action/workflow environment
        echo 'GitHub Action/Workflow Event/Triggers 💬'
        echo "GitHub ref: ${{ github.ref }}"
        echo "GitHub ref type: ${{ github.ref_type }}"
        # For actions/workflows triggered by a tag push, this is the tag value
        echo "GitHub ref name: ${{ github.ref_name }} 🏷️"
        echo "tag=${{ github.ref_name }}" >> "$GITHUB_ENV"
        echo "tag=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
        echo 'valid=false' >> "$GITHUB_OUTPUT"

    - name: 'Report GitHub event/trigger'
      id: 'event'
      shell: bash
      run: |
        # Report GitHub event/trigger
        if [ "${{ github.ref_type }}" = 'tag' ]; then
          tag_push='true'
          echo 'Workflow/action trigger was tag push event ✅'
        else
          tag_push='false'
          if [ "f${{ inputs.exit_on_fail }}" = "ftrue" ]; then
            echo 'Workflow/action trigger was NOT tag push event ❌'
            exit 1
          else
            echo 'Workflow/action trigger was NOT tag push event ⚠️'
          fi
        fi
        echo "tag_push=$tag_push" >> $GITHUB_ENV
        echo "tag_push=$tag_push" >> $GITHUB_OUTPUT

    - name: "Validate action inputs"
      # yamllint disable-line rule:line-length
      shell: bash
      run: |
        # Validate action inputs
        if [ "${{ inputs.versioning }}" = 'semver' ] || \
          [ "${{ inputs.versioning }}" = 'calver' ] || \
          [ "${{ inputs.versioning }}" = 'none' ]; then
          echo 'Action inputs validated 💬'
        else
          echo "Error: invalid versioning input: ${{ inputs.versioning }} ❌"
          exit 1
        fi

    - name: 'Validate tag/string [semver]'
      if: inputs.versioning == 'semver'
      id: semver
      # yamllint disable-line rule:line-length
      uses: lfreleng-actions/tag-validate-semantic-action@96445f92479f91efd979dffb2e2610a32d7eccd0 # v0.2.1
      with:
        string: "${{ github.ref_name }}"
        exit_on_fail: "${{ inputs.exit_on_fail }}"

    - name: 'Validate tag/string [calver]'
      if: inputs.versioning == 'calver'
      id: calver
      # yamllint disable-line rule:line-length
      uses: lfreleng-actions/tag-validate-calver-action@c0684c67ba3a9f6f0c607f32eda6bd8d1564b2be # v0.1.0
      with:
        string: "${{ github.ref_name }}"
        exit_on_fail: "${{ inputs.exit_on_fail }}"

    - name: 'Set outputs and return results'
      id: results
      shell: bash
      run: |
        # Validation passed
        if [ "${{ steps.semver.outcome }}" = 'success' ]; then
          echo 'Pushed tag conforms to Semantic Versioning ✅' \
            >> "$GITHUB_STEP_SUMMARY"
          echo 'valid=true' >> "$GITHUB_OUTPUT"
        elif [ "${{ steps.calver.outcome }}" = 'success' ]; then
          echo 'Pushed tag conforms to Calendar Versioning ✅' \
            >> "$GITHUB_STEP_SUMMARY"
          echo 'valid=true' >> "$GITHUB_OUTPUT"
        elif [ "${{ inputs.versioning }}" = 'none' ]; then
          echo 'Tag validation not enabled for this action/workflow ⚠️' \
            >> "$GITHUB_STEP_SUMMARY"
          echo 'valid=untested' >> "$GITHUB_OUTPUT"
        else
          echo "Tag/string failed ${{ inputs.versioning }} validation ❌"
          echo 'valid=false' >> "$GITHUB_OUTPUT"
          if [ "f$exit_on_fail" = "ftrue" ]; then
            exit 1
          fi
        fi

        # Flag when the tag/string indicates development version
        dev_version=false
        if [ "${{ steps.semver.outputs.dev_version }}" = 'true' ] \
          || [ "${{ steps.calver.outputs.dev_version }}" = 'true' ]; then
          echo "Development/pre-release detected 🛠️" \
            >> "$GITHUB_STEP_SUMMARY"
          dev_version=true
        fi
        echo "dev_version=$dev_version" >> $GITHUB_ENV
        echo "dev_version=$dev_version" >> $GITHUB_OUTPUT
